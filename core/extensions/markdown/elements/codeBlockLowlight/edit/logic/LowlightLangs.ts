import { languageClassPrefix } from "@ext/markdown/elements/codeBlockLowlight/edit/model/codeBlockLowlight";
import type { LanguageFn } from "highlight.js";

const languages: Record<string, () => Promise<any>> = {
	"1c": () => import("@ext/markdown/elements/codeBlockLowlight/edit/logic/langs/1c"),
	gherkin: () => import("@ext/markdown/elements/codeBlockLowlight/edit/logic/langs/gherkin"),
	bash: () => import("highlight.js/lib/languages/bash"),
	curl: () => import("@ext/markdown/elements/codeBlockLowlight/edit/logic/langs/curl"),
	c: () => import("highlight.js/lib/languages/c"),
	cpp: () => import("highlight.js/lib/languages/cpp"),
	csharp: () => import("highlight.js/lib/languages/csharp"),
	css: () => import("highlight.js/lib/languages/css"),
	markdown: () => import("highlight.js/lib/languages/markdown"),
	diff: () => import("highlight.js/lib/languages/diff"),
	ruby: () => import("highlight.js/lib/languages/ruby"),
	go: () => import("highlight.js/lib/languages/go"),
	graphql: () => import("highlight.js/lib/languages/graphql"),
	ini: () => import("highlight.js/lib/languages/ini"),
	java: () => import("highlight.js/lib/languages/java"),
	javascript: () => import("highlight.js/lib/languages/javascript"),
	json: () => import("highlight.js/lib/languages/json"),
	kotlin: () => import("highlight.js/lib/languages/kotlin"),
	less: () => import("highlight.js/lib/languages/less"),
	lua: () => import("highlight.js/lib/languages/lua"),
	makefile: () => import("highlight.js/lib/languages/makefile"),
	perl: () => import("highlight.js/lib/languages/perl"),
	objectivec: () => import("highlight.js/lib/languages/objectivec"),
	php: () => import("highlight.js/lib/languages/php"),
	"php-template": () => import("highlight.js/lib/languages/php-template"),
	plaintext: () => import("highlight.js/lib/languages/plaintext"),
	python: () => import("highlight.js/lib/languages/python"),
	"python-repl": () => import("highlight.js/lib/languages/python-repl"),
	r: () => import("highlight.js/lib/languages/r"),
	rust: () => import("highlight.js/lib/languages/rust"),
	scss: () => import("highlight.js/lib/languages/scss"),
	shell: () => import("highlight.js/lib/languages/powershell"),
	sql: () => import("highlight.js/lib/languages/sql"),
	swift: () => import("highlight.js/lib/languages/swift"),
	yaml: () => import("highlight.js/lib/languages/yaml"),
	typescript: () => import("highlight.js/lib/languages/typescript"),
	vbnet: () => import("highlight.js/lib/languages/vbnet"),
	wasm: () => import("highlight.js/lib/languages/wasm"),
	abnf: () => import("highlight.js/lib/languages/abnf"),
	accesslog: () => import("highlight.js/lib/languages/accesslog"),
	actionscript: () => import("highlight.js/lib/languages/actionscript"),
	ada: () => import("highlight.js/lib/languages/ada"),
	angelscript: () => import("highlight.js/lib/languages/angelscript"),
	apache: () => import("highlight.js/lib/languages/apache"),
	applescript: () => import("highlight.js/lib/languages/applescript"),
	arcade: () => import("highlight.js/lib/languages/arcade"),
	armasm: () => import("highlight.js/lib/languages/armasm"),
	asciidoc: () => import("highlight.js/lib/languages/asciidoc"),
	aspectj: () => import("highlight.js/lib/languages/aspectj"),
	autohotkey: () => import("highlight.js/lib/languages/autohotkey"),
	autoit: () => import("highlight.js/lib/languages/autoit"),
	avrasm: () => import("highlight.js/lib/languages/avrasm"),
	awk: () => import("highlight.js/lib/languages/awk"),
	axapta: () => import("highlight.js/lib/languages/axapta"),
	basic: () => import("highlight.js/lib/languages/basic"),
	bnf: () => import("highlight.js/lib/languages/bnf"),
	brainfuck: () => import("highlight.js/lib/languages/brainfuck"),
	cal: () => import("highlight.js/lib/languages/cal"),
	capnproto: () => import("highlight.js/lib/languages/capnproto"),
	ceylon: () => import("highlight.js/lib/languages/ceylon"),
	clean: () => import("highlight.js/lib/languages/clean"),
	clojure: () => import("highlight.js/lib/languages/clojure"),
	clojureRepl: () => import("highlight.js/lib/languages/clojure-repl"),
	cmake: () => import("highlight.js/lib/languages/cmake"),
	coffeescript: () => import("highlight.js/lib/languages/coffeescript"),
	coq: () => import("highlight.js/lib/languages/coq"),
	cos: () => import("highlight.js/lib/languages/cos"),
	crmsh: () => import("highlight.js/lib/languages/crmsh"),
	crystal: () => import("highlight.js/lib/languages/crystal"),
	csp: () => import("highlight.js/lib/languages/csp"),
	d: () => import("highlight.js/lib/languages/d"),
	dart: () => import("highlight.js/lib/languages/dart"),
	delphi: () => import("highlight.js/lib/languages/delphi"),
	django: () => import("highlight.js/lib/languages/django"),
	dns: () => import("highlight.js/lib/languages/dns"),
	dockerfile: () => import("highlight.js/lib/languages/dockerfile"),
	dos: () => import("highlight.js/lib/languages/dos"),
	dsconfig: () => import("highlight.js/lib/languages/dsconfig"),
	dts: () => import("highlight.js/lib/languages/dts"),
	dust: () => import("highlight.js/lib/languages/dust"),
	ebnf: () => import("highlight.js/lib/languages/ebnf"),
	elixir: () => import("highlight.js/lib/languages/elixir"),
	elm: () => import("highlight.js/lib/languages/elm"),
	erb: () => import("highlight.js/lib/languages/erb"),
	erlang: () => import("highlight.js/lib/languages/erlang"),
	erlangRepl: () => import("highlight.js/lib/languages/erlang-repl"),
	excel: () => import("highlight.js/lib/languages/excel"),
	fix: () => import("highlight.js/lib/languages/fix"),
	flix: () => import("highlight.js/lib/languages/flix"),
	fortran: () => import("highlight.js/lib/languages/fortran"),
	fsharp: () => import("highlight.js/lib/languages/fsharp"),
	gams: () => import("highlight.js/lib/languages/gams"),
	gauss: () => import("highlight.js/lib/languages/gauss"),
	gcode: () => import("highlight.js/lib/languages/gcode"),
	glsl: () => import("highlight.js/lib/languages/glsl"),
	gml: () => import("highlight.js/lib/languages/gml"),
	golo: () => import("highlight.js/lib/languages/golo"),
	gradle: () => import("highlight.js/lib/languages/gradle"),
	groovy: () => import("highlight.js/lib/languages/groovy"),
	html: () => import("highlight.js/lib/languages/xml"),
	haml: () => import("highlight.js/lib/languages/haml"),
	handlebars: () => import("highlight.js/lib/languages/handlebars"),
	haskell: () => import("highlight.js/lib/languages/haskell"),
	haxe: () => import("highlight.js/lib/languages/haxe"),
	hsp: () => import("highlight.js/lib/languages/hsp"),
	http: () => import("highlight.js/lib/languages/http"),
	hy: () => import("highlight.js/lib/languages/hy"),
	inform7: () => import("highlight.js/lib/languages/inform7"),
	irpf90: () => import("highlight.js/lib/languages/irpf90"),
	isbl: () => import("highlight.js/lib/languages/isbl"),
	jbossCli: () => import("highlight.js/lib/languages/jboss-cli"),
	julia: () => import("highlight.js/lib/languages/julia"),
	juliaRepl: () => import("highlight.js/lib/languages/julia-repl"),
	lasso: () => import("highlight.js/lib/languages/lasso"),
	latex: () => import("highlight.js/lib/languages/latex"),
	ldif: () => import("highlight.js/lib/languages/ldif"),
	leaf: () => import("highlight.js/lib/languages/leaf"),
	lisp: () => import("highlight.js/lib/languages/lisp"),
	livecodeserver: () => import("highlight.js/lib/languages/livecodeserver"),
	livescript: () => import("highlight.js/lib/languages/livescript"),
	llvm: () => import("highlight.js/lib/languages/llvm"),
	lsl: () => import("highlight.js/lib/languages/lsl"),
	mathematica: () => import("highlight.js/lib/languages/mathematica"),
	matlab: () => import("highlight.js/lib/languages/matlab"),
	maxima: () => import("highlight.js/lib/languages/maxima"),
	mel: () => import("highlight.js/lib/languages/mel"),
	mercury: () => import("highlight.js/lib/languages/mercury"),
	mipsasm: () => import("highlight.js/lib/languages/mipsasm"),
	mizar: () => import("highlight.js/lib/languages/mizar"),
	mojolicious: () => import("highlight.js/lib/languages/mojolicious"),
	monkey: () => import("highlight.js/lib/languages/monkey"),
	moonscript: () => import("highlight.js/lib/languages/moonscript"),
	n1ql: () => import("highlight.js/lib/languages/n1ql"),
	nestedtext: () => import("highlight.js/lib/languages/nestedtext"),
	nginx: () => import("highlight.js/lib/languages/nginx"),
	nim: () => import("highlight.js/lib/languages/nim"),
	nix: () => import("highlight.js/lib/languages/nix"),
	nodeRepl: () => import("highlight.js/lib/languages/node-repl"),
	nsis: () => import("highlight.js/lib/languages/nsis"),
	ocaml: () => import("highlight.js/lib/languages/ocaml"),
	openscad: () => import("highlight.js/lib/languages/openscad"),
	oxygene: () => import("highlight.js/lib/languages/oxygene"),
	pascal: () => import("highlight.js/lib/languages/delphi"),
	parser3: () => import("highlight.js/lib/languages/parser3"),
	pf: () => import("highlight.js/lib/languages/pf"),
	pgsql: () => import("highlight.js/lib/languages/pgsql"),
	pony: () => import("highlight.js/lib/languages/pony"),
	powershell: () => import("highlight.js/lib/languages/powershell"),
	processing: () => import("highlight.js/lib/languages/processing"),
	profile: () => import("highlight.js/lib/languages/profile"),
	prolog: () => import("highlight.js/lib/languages/prolog"),
	properties: () => import("highlight.js/lib/languages/properties"),
	protobuf: () => import("highlight.js/lib/languages/protobuf"),
	puppet: () => import("highlight.js/lib/languages/puppet"),
	purebasic: () => import("highlight.js/lib/languages/purebasic"),
	q: () => import("highlight.js/lib/languages/q"),
	qml: () => import("highlight.js/lib/languages/qml"),
	reasonml: () => import("highlight.js/lib/languages/reasonml"),
	rib: () => import("highlight.js/lib/languages/rib"),
	roboconf: () => import("highlight.js/lib/languages/roboconf"),
	routeros: () => import("highlight.js/lib/languages/routeros"),
	rsl: () => import("highlight.js/lib/languages/rsl"),
	ruleslanguage: () => import("highlight.js/lib/languages/ruleslanguage"),
	sas: () => import("highlight.js/lib/languages/sas"),
	scala: () => import("highlight.js/lib/languages/scala"),
	scheme: () => import("highlight.js/lib/languages/scheme"),
	scilab: () => import("highlight.js/lib/languages/scilab"),
	smali: () => import("highlight.js/lib/languages/smali"),
	smalltalk: () => import("highlight.js/lib/languages/smalltalk"),
	sml: () => import("highlight.js/lib/languages/sml"),
	sqf: () => import("highlight.js/lib/languages/sqf"),
	stan: () => import("highlight.js/lib/languages/stan"),
	stata: () => import("highlight.js/lib/languages/stata"),
	step21: () => import("highlight.js/lib/languages/step21"),
	stylus: () => import("highlight.js/lib/languages/stylus"),
	subunit: () => import("highlight.js/lib/languages/subunit"),
	taggerscript: () => import("highlight.js/lib/languages/taggerscript"),
	tap: () => import("highlight.js/lib/languages/tap"),
	tcl: () => import("highlight.js/lib/languages/tcl"),
	thrift: () => import("highlight.js/lib/languages/thrift"),
	tp: () => import("highlight.js/lib/languages/tp"),
	twig: () => import("highlight.js/lib/languages/twig"),
	vala: () => import("highlight.js/lib/languages/vala"),
	vbscript: () => import("highlight.js/lib/languages/vbscript"),
	vbscriptHtml: () => import("highlight.js/lib/languages/vbscript-html"),
	verilog: () => import("highlight.js/lib/languages/verilog"),
	vhdl: () => import("highlight.js/lib/languages/vhdl"),
	vim: () => import("highlight.js/lib/languages/vim"),
	wren: () => import("highlight.js/lib/languages/wren"),
	xml: () => import("highlight.js/lib/languages/xml"),
	x86asm: () => import("highlight.js/lib/languages/x86asm"),
	xl: () => import("highlight.js/lib/languages/xl"),
	xquery: () => import("highlight.js/lib/languages/xquery"),
	zephir: () => import("highlight.js/lib/languages/zephir"),
};

const standardLangWriting: Record<Lang, string> = {
	bash: "Bash",
	curl: "cURL",
	c: "C",
	cpp: "C++",
	csharp: "C#",
	css: "CSS",
	markdown: "Markdown",
	diff: "Diff",
	ruby: "Ruby",
	go: "Go",
	graphql: "GraphQL",
	ini: "INI",
	java: "Java",
	javascript: "JavaScript",
	json: "JSON",
	kotlin: "Kotlin",
	less: "Less",
	lua: "Lua",
	makefile: "Makefile",
	perl: "Perl",
	objectivec: "Objective-C",
	php: "PHP",
	"php-template": "PHP Template",
	plaintext: "Plain text",
	python: "Python",
	"python-repl": "Python REPL",
	r: "R",
	rust: "Rust",
	scss: "SCSS",
	shell: "Shell",
	sql: "SQL",
	swift: "Swift",
	yaml: "YAML",
	typescript: "TypeScript",
	vbnet: "VB.NET",
	wasm: "WebAssembly",
	"1c": "1C",
	abnf: "ABNF",
	accesslog: "AccessLog",
	actionscript: "ActionScript",
	ada: "Ada",
	angelscript: "AngelScript",
	apache: "Apache",
	applescript: "AppleScript",
	arcade: "Arcade",
	armasm: "ARM Assembly",
	asciidoc: "AsciiDoc",
	aspectj: "AspectJ",
	autohotkey: "AutoHotkey",
	autoit: "AutoIt",
	avrasm: "AVR ASM",
	awk: "Awk",
	axapta: "Axapta",
	basic: "BASIC",
	bnf: "BNF",
	brainfuck: "Brainfuck",
	cal: "CAL",
	capnproto: "Cap’n Proto",
	ceylon: "Ceylon",
	clean: "Clean",
	clojure: "Clojure",
	clojureRepl: "Clojure REPL",
	cmake: "CMake",
	coffeescript: "CoffeeScript",
	coq: "Coq",
	cos: "COS",
	crmsh: "Crmsh",
	crystal: "Crystal",
	csp: "CSP",
	d: "D",
	dart: "Dart",
	delphi: "Delphi",
	django: "Django",
	dns: "DNS",
	dockerfile: "Dockerfile",
	dos: "DOS",
	dsconfig: "Dsconfig",
	dts: "DTS",
	dust: "Dust",
	ebnf: "EBNF",
	elixir: "Elixir",
	elm: "Elm",
	erb: "ERB",
	erlang: "Erlang",
	erlangRepl: "Erlang REPL",
	excel: "Excel",
	fix: "FIX",
	flix: "Flix",
	fortran: "Fortran",
	fsharp: "F#",
	gams: "GAMS",
	gauss: "Gauss",
	gcode: "G-code",
	gherkin: "Gherkin",
	glsl: "GLSL",
	gml: "GML",
	golo: "Golo",
	gradle: "Gradle",
	groovy: "Groovy",
	html: "HTML",
	haml: "Haml",
	handlebars: "Handlebars",
	haskell: "Haskell",
	haxe: "Haxe",
	hsp: "HSP",
	http: "HTTP",
	hy: "Hy",
	inform7: "Inform 7",
	irpf90: "IRPF90",
	isbl: "ISBL",
	jbossCli: "JBoss CLI",
	julia: "Julia",
	juliaRepl: "Julia REPL",
	lasso: "Lasso",
	latex: "LaTeX",
	ldif: "LDIF",
	leaf: "Leaf",
	lisp: "Lisp",
	livecodeserver: "LiveCode Server",
	livescript: "LiveScript",
	llvm: "LLVM",
	lsl: "LSL",
	mathematica: "Mathematica",
	matlab: "MATLAB",
	maxima: "Maxima",
	mel: "MEL",
	mercury: "Mercury",
	mipsasm: "MIPS Assembly",
	mizar: "Mizar",
	mojolicious: "Mojolicious",
	monkey: "Monkey",
	moonscript: "MoonScript",
	n1ql: "N1QL",
	nestedtext: "NestedText",
	nginx: "NGINX",
	nim: "Nim",
	nix: "Nix",
	nodeRepl: "Node REPL",
	nsis: "NSIS",
	ocaml: "OCaml",
	openscad: "OpenSCAD",
	oxygene: "Oxygene",
	pascal: "Pascal",
	parser3: "Parser3",
	pf: "PF",
	pgsql: "PostgreSQL",
	pony: "Pony",
	powershell: "PowerShell",
	processing: "Processing",
	profile: "Profile",
	prolog: "Prolog",
	properties: "Properties",
	protobuf: "Protocol Buffers",
	puppet: "Puppet",
	purebasic: "PureBasic",
	q: "Q",
	qml: "QML",
	reasonml: "ReasonML",
	rib: "RIB",
	roboconf: "Roboconf",
	routeros: "RouterOS",
	rsl: "RSL",
	ruleslanguage: "RulesLanguage",
	sas: "SAS",
	scala: "Scala",
	scheme: "Scheme",
	scilab: "Scilab",
	smali: "Smali",
	smalltalk: "Smalltalk",
	sml: "Standard ML",
	sqf: "SQF",
	stan: "Stan",
	stata: "Stata",
	step21: "STEP 21",
	stylus: "Stylus",
	subunit: "SubUnit",
	taggerscript: "TaggerScript",
	tap: "TAP",
	tcl: "Tcl",
	thrift: "Thrift",
	tp: "TP",
	twig: "Twig",
	vala: "Vala",
	vbscript: "VBScript",
	vbscriptHtml: "VBScript in HTML",
	verilog: "Verilog",
	vhdl: "VHDL",
	vim: "Vim",
	wren: "Wren",
	xml: "XML",
	x86asm: "x86 Assembly",
	xl: "XL",
	xquery: "XQuery",
	zephir: "Zephir",
};

export type Lang = keyof typeof languages;

export const sortByFirstLetter = (arr: string[]): string[] =>
	arr.sort((a, b) => a.localeCompare(b, undefined, { sensitivity: "base" }));

export const StandardCaseLangList = sortByFirstLetter(Object.values(standardLangWriting));

const standardCaseLangListLowe = StandardCaseLangList.slice().map((lang) => lang.toLowerCase());
const standardCaseKeys = sortByFirstLetter(Object.keys(standardLangWriting));

export const getLowerLangName = (name?: string) => {
	if (!name || typeof name !== "string") return;
	const lowerName = name.toLowerCase();

	const index = standardCaseKeys.indexOf(lowerName);
	if (index !== -1) return standardCaseKeys[index];

	return;
};

export function getStandardCaseByLower(name?: string) {
	const lowerName = getLowerLangName(name);
	if (!lowerName) return name;

	const index = standardCaseLangListLowe.indexOf(lowerName);

	return StandardCaseLangList[index];
}

export async function getLangImportFuncByName(name?: string): Promise<void | LanguageFn> {
	const linkToLangModule = languages[name];
	if (!linkToLangModule) return;

	const langModule = await linkToLangModule();

	return langModule.default as LanguageFn;
}
