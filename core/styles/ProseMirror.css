.ProseMirror {
	position: relative;
	outline-style: none;
	word-wrap: break-word;
	white-space: inherit;
	outline-color: initial;
	font-variant-ligatures: none;
	outline-width: 0 !important;
	font-feature-settings: "liga" 0;
	-webkit-font-variant-ligatures: none;
}

.ProseMirror-hideselection {
	caret-color: transparent;
}
.ProseMirror-hideselection *::selection,
.ProseMirror-hideselection *::-moz-selection {
	background: transparent;
}

.ProseMirror img.ProseMirror-separator {
	display: inline !important;
	border: none !important;
	margin: 0 !important;
}

.ProseMirror .focus-pointer-events {
	user-select: none;
	-ms-user-select: none;
	-webkit-user-select: none;
	pointer-events: none;
}

.ProseMirror-selectednode {
	.focus-pointer-events {
		pointer-events: auto !important;
	}

	*[data-focusable="true"] {
		outline: 2px solid var(--color-focus);
		outline-offset: -2px;
	}
}

.ProseMirror a {
	cursor: text !important;
}

.ProseMirror p:empty::after {
	content: "\00A0" !important;
}

.ProseMirror li {
	position: relative;
}
.ProseMirror li > p {
	line-height: 1.7em;
}

.ProseMirror pre {
	white-space: pre-wrap;
}

.ProseMirror comment-react-component {
	cursor: pointer;
	border-radius: var(--radius-small);
	background: var(--color-comment-bg);
}

.ProseMirror comment-react-component:hover {
	background: var(--color-comment-hover-bg) !important;
}

.ProseMirror pre > div {
	padding: 0;
	font-size: 0.8rem;
	text-wrap: nowrap;
	line-height: 20px;
	background: none !important;
	color: var(--color-fence-text);
}

.ProseMirror blockquote {
	padding-left: 1rem;
	border-left: 2px solid rgba(#0d0d0d, 0.1);
}

.ProseMirror hr {
	border: none;
	border-top: 2px solid rgba(#0d0d0d, 0.1);
	margin: 2rem 0;
}

.ProseMirror .color:before {
	background-color: var(--color);
	border: 1px solid rgba(128, 128, 128, 0.3);
	border-radius: var(--radius-x-small);
	content: " ";
	display: inline-block;
	height: 1em;
	margin-bottom: 0.15em;
	margin-right: 0.1em;
	vertical-align: middle;
	width: 1em;
}

.ProseMirror *,
.ProseMirror *:before,
.ProseMirror *:after {
	box-sizing: border-box;
}

.ProseMirror table {
	margin: 0;
	table-layout: fixed;
	border-collapse: collapse;
}
.ProseMirror table td,
.ProseMirror table th {
	box-sizing: border-box;
	min-width: 1em;
	position: relative;
}

.ProseMirror table td,
.ProseMirror table th > * {
	margin-bottom: 0;
}

.ProseMirror table th {
	text-align: left;
}

.ProseMirror table .selectedCell:after {
	background: var(--color-code-bg);
	content: "";
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	pointer-events: none;
	position: absolute;
	z-index: var(--z-index-selected-cell);
}

.ProseMirror table .column-resize-handle {
	background-color: #adf;
	bottom: -2px;
	position: absolute;
	right: -2px;
	pointer-events: none;
	top: 0;
	width: 4px;
}

.table-actions {
	position: absolute;
}

.resize-cursor {
	cursor: col-resize;
}

.ProseMirror p.is-empty:first-of-type::before,
.ProseMirror h1.is-empty:first-of-type::before {
	content: attr(data-placeholder);
	pointer-events: none;
	opacity: 0.4;
	float: left;
	height: 0;
}

.ProseMirror gr-file {
	color: var(--color-link);
}

.ProseMirror gr-file::before {
	content: var(--content-file-plus);
	vertical-align: text-bottom;
	line-height: 1;
}

@media print {
	.ProseMirror pre > div {
		text-wrap: wrap;
	}

	.ProseMirror code {
		border: solid 1px rgba(0, 0, 0, 0.93);
		overflow: auto;
		break-inside: avoid;
	}

	.ProseMirror comment-react-component {
		cursor: auto;
		background: none;
	}
}


/* temp styles below */
.removed-text {
	background-color: rgba(255, 0, 0, 0.3);
	text-decoration: line-through;
}

.removed-text-block {
	outline: 2px solid rgba(255, 0, 0, 0.3);
}

.added-text {
	background-color: rgba(0, 255, 0, 0.3);
}

.added-text-block {
	outline: 2px solid rgba(0, 255, 0, 0.3);
}

.changed-context {
	background-color: rgba(133, 39, 255, 0.3);
}
.changed-context-block {
	outline: 2px solid rgba(133, 39, 255, 0.3);
}


.added-text.changed-context {
	background-color: rgba(0, 143, 38, 0.348)
}
